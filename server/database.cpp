

void Database::create_tables() {
    string account_sql = "CREATE TABLE ACCOUNT("\
    "id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,"\
    "BALANCE INT NOT NULL);";
  
    string position_sql =
    "CREATE TABLE POSITIONS("\
    "id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,"\
    "ACCOUNT_ID INT NOT NULL,"\
    "FOREIGN KEY(ACCOUNT_ID) REFERENCES ACCOUNT(id) ,"\
    "SYM VARCHAR(50) NOT NULL,"\
    "AMOUNT FLOAT NOT NULL);";
  
    string order_sql =
    "CREATE TABLE ORDER_OPEN("\
    "id INT AUTO_INCREMENT PRIMARY KEY  NOT NULL,"\
    "ACCOUNT_ID INT NOT NULL,"\
    "FOREIGN KEY(ACCOUNT_ID) REFERENCES ACCOUNT(id),"\
    "SYM VARCHAR(50) NOT NULL,"\
    "AMOUNT FLOAT NOT NULL,"\
    "PRICE FLOAT NOT NULL,"\
    "TIME TIMESTAMP DEFAULT NOW());";
  
    string execution_sql =
    "CREATE TABLE ORDER_EXECUTION("\
    "id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,"\
    "BUYER_ID INT NOT NULL,"\
    "SELLER_ID INT NOT NULL,"\
    "BUY_ID INT NOT NULL,"\
    "SELL_ID INT NOT NULL,"\
    "FOREIGN KEY(BUYER_ID) REFERENCES ACCOUNT(id),"	\
    "FOREIGN KEY(SELLER_ID) REFERENCES ACCOUNT(id),"\
    "FOREIGN KEY(BUY_ID) REFERENCES ORDER_OPEN(id),"\
    "FOREIGN KEY(SELL_ID) REFERENCES ORDER_OPEN(id),"\
    "SYM VARCHAR(50) NOT NULL,"\
    "PRICE FLOAT NOT NULL,"	\
    "AMOUNT FLOAT NOT NULL,"\
    "TIME TIMESTAMP DEFAULT NOW());";

    string cancel_sql =
    "CREATE TABLE ORDER_CANCEL("\
    "id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,"\
    "ACCOUNT_ID INT NOT NULL,"\
    "TRANS_ID INT NOT NULL,"\
    "FOREIGN KEY(ACCOUNT_ID) REFERENCES ACCOUNT(id),"	\
    "FOREIGN KEY(TRANS_ID) REFERENCES ORDER_OPEN(id),"	\
    "AMOUNT FLOAT NOT NULL,"\
    "TIME TIMESTAMP DEFAULT NOW());";
}